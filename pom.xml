<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.saucedemo</groupId>
	<artifactId>saucedemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.141.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/htmlunit-driver -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>htmlunit-driver</artifactId>
			<version>2.47.1</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.0.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>4.3.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.github.temyers/cucumber-jvm-parallel-plugin -->
		<dependency>
			<groupId>com.github.temyers</groupId>
			<artifactId>cucumber-jvm-parallel-plugin</artifactId>
			<version>5.0.0</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>4.3.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.microsoft.edge/msedge-selenium-tools-java -->
		<dependency>
			<groupId>com.microsoft.edge</groupId>
			<artifactId>msedge-selenium-tools-java</artifactId>
			<version>3.141.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.paulhammant/ngwebdriver -->
		<dependency>
			<groupId>com.paulhammant</groupId>
			<artifactId>ngwebdriver</artifactId>
			<version>1.1.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>4.3.0</version>
		</dependency>
	</dependencies>

	<build>

		<pluginManagement>

			<plugins>

				<plugin>
					<groupId>com.github.temyers</groupId>
					<artifactId>cucumber-jvm-parallel-plugin</artifactId>
					<version>5.0.0</version>
					<executions>
						<execution>
							<id>generateRunners</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>generateRunners</goal>
							</goals>
							<configuration>
								<!-- Mandatory -->
								<!-- comma separated list of package names to scan for glue code -->
								<glue>foo, bar</glue>
								<outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
								<!-- The directory, which must be in the root of the runtime classpath, 
									containing your feature files. -->
								<featuresDirectory>src/test/resources/features/</featuresDirectory>
								<!-- Directory where the cucumber report files shall be written -->
								<cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
								<!-- comma separated list of output formats json,html,rerun.txt -->
								<format>json</format>
								<!-- CucumberOptions.strict property -->
								<strict>true</strict>
								<!-- CucumberOptions.monochrome property -->
								<monochrome>true</monochrome>
								<!-- The tags to run, maps to CucumberOptions.tags property you can 
									pass ANDed tags like "@tag1","@tag2" and ORed tags like "@tag1,@tag2,@tag3" -->
								<tags></tags>
								<!-- If set to true, only feature files containing the required tags 
									shall be generated. -->
								<filterFeaturesByTags>false</filterFeaturesByTags>
								<!-- Generate TestNG runners instead of default JUnit ones. -->
								<useTestNG>false</useTestNG>
								<!-- The naming scheme to use for the generated test classes. One 
									of 'simple' or 'feature-title' -->
								<namingScheme>simple</namingScheme>
								<!-- The class naming pattern to use. Only required/used if naming 
									scheme is 'pattern'. -->
								<namingPattern>Parallel{c}IT</namingPattern>
								<!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per 
									scenario. FEATURE generates a runner per feature. -->
								<parallelScheme>SCENARIO</parallelScheme>
								<!-- This is optional, required only if you want to specify a custom 
									template for the generated sources (this is a relative path) -->
								<customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M3</version>
					<configuration>
						<forkCount>5</forkCount>
						<reuseForks>true</reuseForks>
						<includes>
							<include>**/*TestRunner.java</include>
						</includes>
						<testFailureIgnore>true</testFailureIgnore>
					</configuration>
				</plugin>

				<plugin>
					<groupId>net.masterthought</groupId>
					<artifactId>maven-cucumber-reporting</artifactId>
					<version>4.7.0</version>
					<executions>
						<execution>
							<id>execution</id>
							<phase>verify</phase>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<projectName>saucedemo</projectName>

								<!-- output directory for the generated report -->
								<outputDirectory>${project.build.directory}</outputDirectory>

								<!-- optional, defaults to outputDirectory if not specified -->
								<inputDirectory>${project.build.directory}</inputDirectory>
								<jsonFiles>
									<!-- supports wildcard or name pattern -->
									<param>**/*.json</param>
								</jsonFiles>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>